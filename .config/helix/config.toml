theme="github_dark"


[editor]
line-number = "relative"
scroll-lines = 1
mouse = true 
auto-format = true
bufferline="multiple"
end-of-line-diagnostics = "hint"
# rulers = [80]
shell = ["pwsh.exe","-NoLogo","-NoProfile","-NoProfileLoadTime","-Command","$PSStyle.OutputRendering='PlainText';"]

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
# hidden = true

[editor.lsp]
display-messages = true
display-inlay-hints = false

[editor.soft-wrap]
enable = true
max-wrap = 25 # increase value to reduce forced mid-word wrapping
max-indent-retain = 0

[editor.statusline]
left = ["mode", "spinner", "file-name"]
center = ["version-control"]
right = [ "diagnostics",
  "selections",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
separator = "│"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.inline-diagnostics]
cursor-line = "warning"

[editor.indent-guides]
render = true
character = "┊" # Some characters that work well: "▏", "╎", "┆", "┊", "⸽"
skip-levels = 1

[keys.normal]
g = { a = "code_action" } # Maps `ga` to show possible code actions
"ret" = ["move_line_down", "goto_first_nonwhitespace"] # Maps the enter key to move to start of next line
"S-ret" = ["move_line_up", "goto_first_nonwhitespace"] # Maps the enter key to move to start of next line
x = "select_line_below"
X = "select_line_above"
D = "delete_char_backward"
# y = ":clipboard-yank-join"
# Y = "yank_joined_to_clipboard"
# p = "paste_clipboard_before"
"H" = ":toggle lsp.display-inlay-hints"
# Move line up, down, right, left
A-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
A-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
A-h = ["delete_selection", "move_char_left", "paste_before"]
A-l = ["delete_selection", "move_char_right", "paste_after"]
# Works only in Unix systems
# # C-r = [
#     ":write-all",
#     ":insert-output scooter >/dev/tty",
#     ":redraw",
#     ":reload-all"
# ]
C-g = [
    ":write-all",
    ":new",
    ":insert-output lazygit",
    # ":insert-output gitui >/dev/tty",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]
[keys.insert]
# j = { k = "normal_mode" } # Maps `jk` to exit insert mode

[keys.normal.space]
# Kinda works on Windows, but prefers Unix systems
e = [
  ":sh rm  /tmp/unique-file-h21a434",
  ":insert-output yazi '%{buffer_name}' --chooser-file=/tmp/unique-file-h21a434",
  ":insert-output echo \"x1b[?1049h\" > /dev/tty",
  ":open %sh{cat /tmp/unique-file-h21a434}",
  ":redraw",
  ":set mouse false",
  ":set mouse true"
]
# Kinda works on Windows, but prefers Unix systems
E = [
  ":sh rm  /tmp/unique-file-u41ae14",
  ":insert-output yazi '%{workspace_directory}' --chooser-file=/tmp/unique-file-u41ae14",
  ":insert-output echo \"x1b[?1049h\" > /dev/tty",
  ":open %sh{cat /tmp/unique-file-u41ae14}",
  ":redraw",
  ":set mouse false",
  ":set mouse true"
]
